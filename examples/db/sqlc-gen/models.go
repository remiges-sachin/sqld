// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package sqlc

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type Account struct {
	ID            int64              `json:"id"`
	AccountNumber string             `json:"account_number"`
	AccountName   string             `json:"account_name"`
	AccountType   string             `json:"account_type"`
	Balance       pgtype.Numeric     `json:"balance"`
	Currency      string             `json:"currency"`
	Status        string             `json:"status"`
	OwnerID       pgtype.Int8        `json:"owner_id"`
	CreatedAt     pgtype.Timestamptz `json:"created_at"`
	UpdatedAt     pgtype.Timestamptz `json:"updated_at"`
}

type CommonReferenceMaster struct {
	ID        int64              `json:"id"`
	Entity    string             `json:"entity"`
	EntityKey string             `json:"entity_key"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	UpdatedAt pgtype.Timestamptz `json:"updated_at"`
}

type Employee struct {
	ID         int64              `json:"id"`
	FirstName  string             `json:"first_name"`
	LastName   string             `json:"last_name"`
	Email      string             `json:"email"`
	Phone      pgtype.Text        `json:"phone"`
	HireDate   pgtype.Date        `json:"hire_date"`
	Salary     pgtype.Numeric     `json:"salary"`
	Department pgtype.Text        `json:"department"`
	Position   pgtype.Text        `json:"position"`
	IsActive   pgtype.Bool        `json:"is_active"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
	UpdatedAt  pgtype.Timestamptz `json:"updated_at"`
}

type EmployeeStat struct {
	Department    pgtype.Text `json:"department"`
	EmployeeCount int64       `json:"employee_count"`
	AvgSalary     float64     `json:"avg_salary"`
	EarliestHire  interface{} `json:"earliest_hire"`
}

type Holder struct {
	ID         int64              `json:"id"`
	RefID      int64              `json:"ref_id"`
	HolderRank pgtype.Int8        `json:"holder_rank"`
	DeletedAt  pgtype.Timestamptz `json:"deleted_at"`
	DeletedBy  pgtype.Text        `json:"deleted_by"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
	UpdatedAt  pgtype.Timestamptz `json:"updated_at"`
}

type NonIndividualDetail struct {
	ID         int64              `json:"id"`
	RefID      int64              `json:"ref_id"`
	EntityType string             `json:"entity_type"`
	OrgName    pgtype.Text        `json:"org_name"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
	UpdatedAt  pgtype.Timestamptz `json:"updated_at"`
}

type PersonDetail struct {
	ID         int64              `json:"id"`
	RefID      int64              `json:"ref_id"`
	EntityType string             `json:"entity_type"`
	FirstName  pgtype.Text        `json:"first_name"`
	MiddleName pgtype.Text        `json:"middle_name"`
	LastName   pgtype.Text        `json:"last_name"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
	UpdatedAt  pgtype.Timestamptz `json:"updated_at"`
}

type TaxStatusMaster struct {
	ID        int64              `json:"id"`
	TaxName   string             `json:"tax_name"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	UpdatedAt pgtype.Timestamptz `json:"updated_at"`
}

type Ucc struct {
	UccID            int64              `json:"ucc_id"`
	ClientCode       pgtype.Text        `json:"client_code"`
	MemberCode       pgtype.Text        `json:"member_code"`
	TaxStatus        pgtype.Int8        `json:"tax_status"`
	HoldingNature    pgtype.Int8        `json:"holding_nature"`
	UccStatus        pgtype.Int8        `json:"ucc_status"`
	IsClientPhysical bool               `json:"is_client_physical"`
	IsClientDemat    bool               `json:"is_client_demat"`
	ParentClientCode pgtype.Text        `json:"parent_client_code"`
	DeletedAt        pgtype.Timestamptz `json:"deleted_at"`
	DeletedBy        pgtype.Text        `json:"deleted_by"`
	CreatedAt        pgtype.Timestamptz `json:"created_at"`
	UpdatedAt        pgtype.Timestamptz `json:"updated_at"`
}

func (e Employee) TableName() string {
	return "employees"
}